2017-04-18, 펌웨어

Delay 1초 만들기 및 AXD 디버거 사용

==================================================================

디지털보드 -> Clock 을 통한 동작

명령마다 몇개의 Clock 을 사용하는지는 CPU에의해 정해져있다.

CPU의 Clock Frequency를 알고있으므로

-> 이 둘을 계산하면 1초를 계산할수있다. (기본 Freq = 52Mhz)

52000Khz = 52,000,000hz

1/52,000,000(s per clock) 

------------------------------------------------------------------
[C code]		-> [Assembly]
int i;			-> MOV 1 Line
for(i=0; i<10; i++);	-> add, cmp, blt(=JMP) , 3 Line
------------------------------------------------------------------

ex) 명령어마다 clock수가 아래와 같다면...
mov = 1 clock ( 4 clock??)
add = 1 clock
cmp = 1 clock
blt = 5 clock

-> 반복문 for -> 70 clock, int i -> 1 clock
-> 총 71 clock
-> CPU Frequency를 알면 시간을 계산할수있다.

------------------------------------------------------------------

CPU Freq = 52,000,000hz(52Mhz) 이고
for문 한번에 7 clock이 필요하므로
52,000,000 / 7 = 7428571.4285
-> 7 clock 짜리를 약 7,428,571번 사용하면 1초가 걸린다. 
   (처음 MOV의 clock은 반복하지않으므로 계산에서 제하였다.)

------------------------------------------------------------------

밖 10번 for loop

//idr 4
mov 1
add 1
cmp 1
blt 5

	안 74만번 for loop

	mov 1
	add 1
	cmp 1 
	blt 5

7+1 + 74만*7
*10 +1 = 52,000,071

------------------------------------------------------------------

밖 74만번 for loop

mov1
add 1
cmp 1
blt 5

	안 10번 for loop
	mov1
	add1
	cmp1
	blt5

7+1 + 7*10 = 78
*74만 +1 = 57,942,847 (약 10퍼센트정도 시간에 지연이 발생)

------------------------------------------------------------------

for loop 2개를 사용한 code이면
밖 for loop가 클수록(많이돌수록) 원래 계산값에 가깝고
안 for loop가 클수록 원래 계산값에서 멀어지게 된다.

==================================================================

Delay 1초 만들기 & AXD Debugger 사용

==================================================================

※ ARM executable file(.axf) = 실행파일(디버그 대상)

0x2
0x346F